// Code generated by go-swagger; DO NOT EDIT.

package operation

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// SimplereenrollLabelledReader is a Reader for the SimplereenrollLabelled structure.
type SimplereenrollLabelledReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SimplereenrollLabelledReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSimplereenrollLabelledOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSimplereenrollLabelledBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSimplereenrollLabelledUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSimplereenrollLabelledForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSimplereenrollLabelledNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSimplereenrollLabelledInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSimplereenrollLabelledOK creates a SimplereenrollLabelledOK with default headers values
func NewSimplereenrollLabelledOK() *SimplereenrollLabelledOK {
	var (
		// initialize headers with default values
		contentTransferEncodingDefault = string("base64")

		contentTypeDefault = string("application/pkcs7-mime")
	)

	return &SimplereenrollLabelledOK{

		ContentTransferEncoding: contentTransferEncodingDefault,
		ContentType:             contentTypeDefault,
	}
}

/* SimplereenrollLabelledOK describes a response with status code 200, with default header values.

successful operation
*/
type SimplereenrollLabelledOK struct {
	ContentTransferEncoding string
	ContentType             string

	Payload string
}

func (o *SimplereenrollLabelledOK) Error() string {
	return fmt.Sprintf("[POST /{label}/simplereenroll][%d] simplereenrollLabelledOK  %+v", 200, o.Payload)
}
func (o *SimplereenrollLabelledOK) GetPayload() string {
	return o.Payload
}

func (o *SimplereenrollLabelledOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Content-Transfer-Encoding
	hdrContentTransferEncoding := response.GetHeader("Content-Transfer-Encoding")

	if hdrContentTransferEncoding != "" {
		o.ContentTransferEncoding = hdrContentTransferEncoding
	}

	// hydrates response header Content-Type
	hdrContentType := response.GetHeader("Content-Type")

	if hdrContentType != "" {
		o.ContentType = hdrContentType
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSimplereenrollLabelledBadRequest creates a SimplereenrollLabelledBadRequest with default headers values
func NewSimplereenrollLabelledBadRequest() *SimplereenrollLabelledBadRequest {
	return &SimplereenrollLabelledBadRequest{}
}

/* SimplereenrollLabelledBadRequest describes a response with status code 400, with default header values.

invalid request
*/
type SimplereenrollLabelledBadRequest struct {
	Payload string
}

func (o *SimplereenrollLabelledBadRequest) Error() string {
	return fmt.Sprintf("[POST /{label}/simplereenroll][%d] simplereenrollLabelledBadRequest  %+v", 400, o.Payload)
}
func (o *SimplereenrollLabelledBadRequest) GetPayload() string {
	return o.Payload
}

func (o *SimplereenrollLabelledBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSimplereenrollLabelledUnauthorized creates a SimplereenrollLabelledUnauthorized with default headers values
func NewSimplereenrollLabelledUnauthorized() *SimplereenrollLabelledUnauthorized {
	return &SimplereenrollLabelledUnauthorized{}
}

/* SimplereenrollLabelledUnauthorized describes a response with status code 401, with default header values.

Authentication information is missing or invalid
*/
type SimplereenrollLabelledUnauthorized struct {
	WWWAuthenticate string
}

func (o *SimplereenrollLabelledUnauthorized) Error() string {
	return fmt.Sprintf("[POST /{label}/simplereenroll][%d] simplereenrollLabelledUnauthorized ", 401)
}

func (o *SimplereenrollLabelledUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header WWW_Authenticate
	hdrWWWAuthenticate := response.GetHeader("WWW_Authenticate")

	if hdrWWWAuthenticate != "" {
		o.WWWAuthenticate = hdrWWWAuthenticate
	}

	return nil
}

// NewSimplereenrollLabelledForbidden creates a SimplereenrollLabelledForbidden with default headers values
func NewSimplereenrollLabelledForbidden() *SimplereenrollLabelledForbidden {
	return &SimplereenrollLabelledForbidden{}
}

/* SimplereenrollLabelledForbidden describes a response with status code 403, with default header values.

client certificates were not presented
*/
type SimplereenrollLabelledForbidden struct {
	Payload string
}

func (o *SimplereenrollLabelledForbidden) Error() string {
	return fmt.Sprintf("[POST /{label}/simplereenroll][%d] simplereenrollLabelledForbidden  %+v", 403, o.Payload)
}
func (o *SimplereenrollLabelledForbidden) GetPayload() string {
	return o.Payload
}

func (o *SimplereenrollLabelledForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSimplereenrollLabelledNotFound creates a SimplereenrollLabelledNotFound with default headers values
func NewSimplereenrollLabelledNotFound() *SimplereenrollLabelledNotFound {
	return &SimplereenrollLabelledNotFound{}
}

/* SimplereenrollLabelledNotFound describes a response with status code 404, with default header values.

CA not found
*/
type SimplereenrollLabelledNotFound struct {
	Payload string
}

func (o *SimplereenrollLabelledNotFound) Error() string {
	return fmt.Sprintf("[POST /{label}/simplereenroll][%d] simplereenrollLabelledNotFound  %+v", 404, o.Payload)
}
func (o *SimplereenrollLabelledNotFound) GetPayload() string {
	return o.Payload
}

func (o *SimplereenrollLabelledNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSimplereenrollLabelledInternalServerError creates a SimplereenrollLabelledInternalServerError with default headers values
func NewSimplereenrollLabelledInternalServerError() *SimplereenrollLabelledInternalServerError {
	return &SimplereenrollLabelledInternalServerError{}
}

/* SimplereenrollLabelledInternalServerError describes a response with status code 500, with default header values.

something went wrong
*/
type SimplereenrollLabelledInternalServerError struct {
	Payload string
}

func (o *SimplereenrollLabelledInternalServerError) Error() string {
	return fmt.Sprintf("[POST /{label}/simplereenroll][%d] simplereenrollLabelledInternalServerError  %+v", 500, o.Payload)
}
func (o *SimplereenrollLabelledInternalServerError) GetPayload() string {
	return o.Payload
}

func (o *SimplereenrollLabelledInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
